<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.javbus.spider.spider.dao.base.ActressDao">
    <!-- starResultMap.xml -->
    <resultMap id="actressResultMap" type="com.javbus.spider.spider.entity.base.Actress">
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="actressLink" column="actress_link" />
        <result property="photoLink" column="photo_link" />
        <result property="birthDay" column="birth_day" />
        <result property="age" column="age" />
        <result property="height" column="height" />
        <result property="cup" column="cup" />
        <result property="bust" column="bust" />
        <result property="waist" column="waist" />
        <result property="hip" column="hip" />
        <result property="birthPlace" column="birth_place" />
        <result property="hobby" column="hobby" />
        <result property="isCensored" column="is_censored" />
    </resultMap>
    
    <!-- 插入操作 -->
<!-- 插入单个 Actress -->
    <insert id="saveActress" parameterType="com.javbus.spider.spider.entity.base.Actress"> 
        INSERT INTO actress( name, actress_link, photo_link, birth_day, age, height, cup, bust, waist, hip,
        birth_place, hobby, is_censored ) 
        VALUES ( #{name}, #{actressLink}, #{photoLink}, #{birthDay}, #{age}, #{height}, #{cup}, #{bust}, #{waist}, #{hip}, #{birthPlace}, #{hobby},#{isCensored} )
    </insert>

    <!-- 更新操作 -->
    <update id="update" parameterType="com.javbus.spider.spider.entity.base.Actress"> 
        UPDATE actress 
        SET name = #{name}, 
            actress_link = #{actressLink}, 
            photo_link = #{photoLink}, 
            birth_day = #{birthDay}, 
            age = #{age}, 
            height = #{height}, 
            cup = #{cup}, 
            bust = #{bust}, 
            waist = #{waist}, 
            hip = #{hip}, 
            birth_place = #{birthPlace}, 
            hobby = #{hobby} 
        WHERE id = #{id} 
    </update>

<!-- 删除操作 -->
    <delete id="delete" parameterType="java.lang.Integer"> 
        DELETE FROM actress 
        WHERE id = #{id} 
    </delete>


    <!-- 查询操作 -->
    <select id="queryActressById" parameterType="java.lang.Integer" resultMap="actressResultMap"> 
        SELECT * FROM actress WHERE id = #{actressId} 
    </select>
    <select id="queryActressByName" parameterType="java.lang.String" resultMap="actressResultMap"> 
        SELECT * FROM actress WHERE name = #{name} 
    </select>


    <!-- 插入多个 Actress -->
    <insert id="saveActresses" parameterType="java.util.List"> 
        INSERT INTO actress (name, actress_link, photo_link, birth_day, age, height, cup, bust, waist, hip, birth_place, hobby, is_censored)
        VALUES 
        <foreach collection="actresses" item="actress" separator=",">
            (#{actress.name}, #{actress.actressLink}, #{actress.photoLink}, #{actress.birthDay}, #{actress.age}, #{actress.height},
            #{actress.cup}, #{actress.bust}, #{actress.waist}, #{actress.hip}, #{actress.birthPlace}, #{actress.hobby},
            #{actress.isCensored})
        </foreach>
    </insert>

    <!-- 查询多个 Actress 的 ID -->
    <select id="queryActressIdsByNames" resultType="java.lang.Integer"> 
        SELECT id FROM actress WHERE name IN 
        <foreach collection="list" item="names" open="(" separator="," close=")"> 
            #{names} 
        </foreach>
    </select>

    <!-- 查询单个 Actress 的 ID -->
    <select id="queryActressIdByName" parameterType="java.lang.Integer"> 
        SELECT id FROM actress WHERE name=#{name} 
    </select>

    <!-- 查询多个 Actress -->
    <select id="queryActressesById" resultMap="actressResultMap">
        SELECT * FROM actress WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
             #{id}
        </foreach>
    </select>

    <!-- 批量更新操作 -->
    <update id="updateActresses" parameterType="java.util.List">
        <foreach collection="actresses" item="actress" index="index" separator=";">
            UPDATE actress
            SET 
                name = #{actress.name},
                actress_link = #{actress.actressLink},
                photo_link = #{actress.photoLink},
                birth_day = #{actress.birthDay},
                age = #{actress.age},
                height = #{actress.height},
                cup = #{actress.cup},
                bust = #{actress.bust},
                waist = #{actress.waist},
                hip = #{actress.hip},
                birth_place = #{actress.birthPlace},
                hobby = #{actress.hobby},
                is_censored = #{actress.isCensored}
            WHERE id = #{actress.id}
        </foreach>
    </update>

    <!-- queryActresses --> 

    <select id="queryActresses">
        SELECT name from actress LIMIT 10 OFFSET #{offset}
    </select>
</mapper>
